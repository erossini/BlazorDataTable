@page "/filtering"

@inject WeatherForecastService ForecastService

<h1>Advanced filtering example</h1>

@if (forecasts == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<DataTable TModel="WeatherForecast" Items="forecasts" IncludeAdvancedFilters="true">
		<DataTableColumn TModel="WeatherForecast" IsFilterable="true" Property="(e) => e.Date" />
		<DataTableColumn TModel="WeatherForecast" IsFilterable="true" Property="(e) => e.TemperatureC" CustomTitle="Celsius" />
		<DataTableColumn TModel="WeatherForecast" IsFilterable="true" Property="(e) => e.TemperatureF" CustomTitle="Fahrenheit" />
		<DataTableColumn TModel="WeatherForecast" IsFilterable="true" Property="(e) => e.MyNullableInt" />
		<DataTableColumn TModel="WeatherForecast" IsFilterable="true" Property="(e) => e.Summary" />
		<DataTableColumn TModel="WeatherForecast" IsFilterable="true" Property="(e) => e.Country" />
		<DataTableColumn TModel="WeatherForecast" IsFilterable="true" Property="(e) => e.UpdatedRecently" CustomTitle="Recently updated" />
	</DataTable>
}

@code {
	private WeatherForecast[] forecasts;

	protected override async Task OnInitializedAsync()
	{
		forecasts = await ForecastService.GetForecastAsync(DateTime.Now, 5);
	}
}